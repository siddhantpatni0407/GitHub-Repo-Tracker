name: Update README Last Updated (on external repo change)

permissions:
  contents: write

on:
  repository_dispatch:
    types: [repo_changed]   # Trigger only when another repo notifies

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Exit if triggered by github-actions to avoid loop
        if: ${{ github.actor == 'github-actions' }}
        run: |
          echo "Triggered by github-actions. Exiting."
          exit 0

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Last Updated date in README
        env:
          TZ: 'Asia/Kolkata'
        run: |
          set -euo pipefail

          README="README.md"
          if [ ! -f "$README" ]; then
            echo "README not found at expected path. Exiting."
            exit 0
          fi

          NEW_DATE="$(date '+%Y-%m-%d %H:%M %z')"
          echo "Updating Last Updated â†’ $NEW_DATE in $README"

          if grep -q -E 'Last Updated' "$README"; then
            sed -E -i "s#(Last Updated).*#\\1 : \`$NEW_DATE\`#g" "$README"
          else
            awk -v d="$NEW_DATE" 'NR==1{print; print "## ðŸ“… Last Updated : `" d "`"; print ""}1' "$README" > /tmp/README.tmp
            mv /tmp/README.tmp "$README"
          fi

          git --no-pager diff -- "$README" || true

      - name: Commit & push if changed
        env:
          GIT_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_NAME: github-actions[bot]
        run: |
          set -euo pipefail
          git config user.email "$GIT_EMAIL"
          git config user.name "$GIT_NAME"

          if git status --porcelain | grep -q README.md; then
            git add README.md
            git commit -m "chore: update Last Updated timestamp (external repo change)"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "No README changes to commit."
          fi
